=================================================================
                  JellyMac AMP
         The macOS Automated Media Pipeline
=================================================================

Welcome to JellyMac AMP! ðŸ‘‹

This guide will help you set up and use JellyMac AMP (Automated
Media Pipeline), a tool designed to make managing your media
library easier on macOS. Whether you're new to media automation
or a seasoned bash developer, we think this project has
something to offer for anyone with a media server and a Mac.

JellyMac AMP aims to be a lightweight, macOS-centric automation
suite for media management, particularly for users of Jellyfin.
It leverages Bash scripting and common command-line tools to
monitor clipboard events (YouTube links, magnet links) and a
designated "drop folder" for new media. It then processes
these items â€” downloading, renaming, organizing â€” and
optionally integrates with Jellyfin for library updates.

COMPATIBILITY
----------------
JellyMac AMP runs on your Mac to automate your media pipeline.
While it offers direct library scan integration for Jellyfin
servers, its core download and organization features are
designed to work seamlessly with any media server (including
Plex, Emby, etc.) that monitors standard Movie and TV Show
folder structures.

The server itself can be on Linux, Windows, macOS, or a NAS,
as long as your Mac can write to the media library folders
(e.g., via network shares like SMB or NFS).

FUNCTIONALITY
----------------
JellyMac AMP simplifies managing your media library by:

  1. Watching your clipboard for:
     - YouTube links (automatically downloads videos)
     - Magnet links (sends them to Transmission)

  2. Monitoring a "drop folder" where you can place:
     - Movies (loose files or in folders)
     - TV Show Episodes for organization

  Once JellyMac AMP detects new media, it automatically:
     - Cleans filenames for better server matching
       (especially for Jellyfin).
     - Moves files to your configured library paths.
     - Can tell your Jellyfin server to update its library.

Here's a summary of its capabilities:

  1. Process Media Files
     - Drop media into the watched `DROP_FOLDER`.
     - Identifies movies and TV shows.
     - Files are cleaned and organized.
     - Associated files (e.g., subtitles) are kept together.

  2. Handle YouTube Videos
     - Copy a YouTube URL to your clipboard.
     - Videos download at your preferred quality.
     - Placed in your designated YouTube folder (which can
       be a local folder or a network share pointing to
       your server's library).

  3. Process Torrents
     - Copy a magnet link to your clipboard.
     - Link is automatically added to Transmission.
     - When complete, Transmission can be configured to automatically move
       the file to your JellyMac AMP `DROP_FOLDER`. JellyMac AMP then
       processes and sorts it into your library
       destination folder

BEFORE YOU START
----------------
SECURITY NOTE:
     - Always review scripts before running them, or use
       an AI tool like ChatGPT to help check them.
     - This project uses third-party tools:
       `flock`, `yt-dlp`, `transmission-cli`.
     - Do NOT run this script as root (sudo is not
       needed or recommended).
     - Protect your API keys; never share them.
     - This is BETA software that manages files.
       ALWAYS KEEP BACKUPS OF IMPORTANT FILES AND MEDIA!
     - While tested, there's a small risk of data
       loss â€“ be warned.

Setup Instructions
------------------
You'll need:

  1. A Mac running macOS
     - Officially tested on macOS Sequoia 15.4.1.
     - Should work on macOS 10.13 High Sierra (2018)
       and newer.
     - Bash 3.2 (pre-installed on modern Macs).

  2. Homebrew Package Manager
     - If you don't have it, install from https://brew.sh

  3. Required Tools (after installing Homebrew):
     JellyMac AMP needs `flock`, `yt-dlp`, and
     `transmission-cli`.

     TIP: On its first run, if JellyMac AMP detects
     missing dependencies, it will offer to install
     them for you automatically via Homebrew. You can
     choose a one-time install for the current session
     or opt to permanently enable the
     `AUTO_INSTALL_DEPENDENCIES` setting in the
     `lib/jellymac_config.sh` file.
     Alternatively, you can install them manually
     beforehand with:

         Run: brew install flock yt-dlp transmission-cli

  4. A Media Server (Jellyfin, Plex, Emby, etc.)
     - Can be running locally or on another computer/NAS.
     - If using Jellyfin and want auto-scans:
       - You'll need its address (e.g., http://server-ip:8096).
       - You'll need a Jellyfin API key (see Configuration).

INSTALLATION
------------
  1. Get the Files:
       Open Terminal and run each command:
         Run: cd ~
         Run: git clone https://github.com/Mtn-Man/JellyMac-AMP.git JellyMac_AMP
         Run: cd JellyMac_AMP
         Run: chmod +x jellymac.sh bin/*.sh

     Alternatively, download the files and place the
     `JellyMac_AMP` folder in your Home Folder (~).

  2. Configure Your Folders & Settings:
       You MUST edit the configuration file to tell
       JellyMac AMP where your folders are.
       Open `lib/jellymac_config.sh` in a text editor.

       Key paths to set:
       - `DROP_FOLDER`: Where you'll put new media.
         Example: DROP_FOLDER="/Users/YourName/Downloads/JellyDrop"

       - `DEST_DIR_MOVIES`: Final destination for movies.
         Example: DEST_DIR_MOVIES="/Volumes/Media/Movies"

       - `DEST_DIR_SHOWS`: Final destination for TV shows.
         Example: DEST_DIR_SHOWS="/Volumes/Media/Shows"

       - `DEST_DIR_YOUTUBE` (if `ENABLE_CLIPBOARD_YOUTUBE` is true):
         Example: DEST_DIR_YOUTUBE="/Volumes/Media/YouTube"

   TIP: With default settings, JellyMac AMP will automatically create 
      local folders like DROP_FOLDER if needed, but network shares 
      (like /Volumes/Media/) must already be mounted and accessible if used.

  3. Configure Jellyfin Server Updates (Optional):
       If you use Jellyfin and want automatic library scans after new media is added:
       In `lib/jellymac_config.sh`, set:
         `JELLYFIN_SERVER="http://your-server-ip:8096"`
         `JELLYFIN_API_KEY="your-jellyfin-api-key"`

       To get your Jellyfin API key:
         1. Open Jellyfin web interface.
         2. Click user icon â†’ Dashboard.
         3. Go to API Keys section.
         4. Click "+" to create a new API key.
         5. Give it a descriptive name (e.g. JellyMacAMP)

  4. Enable Optional Features:
       In `lib/jellymac_config.sh`, enable features you want:
         `ENABLE_CLIPBOARD_YOUTUBE="true"`
         `ENABLE_CLIPBOARD_MAGNET="true"`
         `ENABLE_DESKTOP_NOTIFICATIONS="true"`
  
  5. Transmission Setup (for magnet link handling):
       To fully utilize the torrent processing capabilities:
       
       a) Install Transmission as a service to start on login:
          Run: brew services start transmission
          
       b) Configure Transmission (through web UI):
          - Open http://localhost:9091 in your browser
          - Click on the settings menu (three stacked horizontal lines) in the top right
          - Click Preferences
          - In the Downloading tab, set the download folder to your DROP_FOLDER:
            Example: /Users/YourName/Downloads/JellyDrop
          - For extra safety (optional): You can check "Use incomplete download folder" 
            and set it to any writable folder (e.g. /Users/YourName/Downloads)
          
       c) Restart Transmission after changes:
          Run: brew services restart transmission
          
       Note: JellyMac AMP is designed to detect file stability and will only
             process downloads after they're complete, so sending files directly
             to your DROP_FOLDER is perfectly safe.
  
  6. Sonarr/Radarr Integration (Optional):
       See `Arr_Suite_Handoff_Guide.txt` in the main
       JellyMac_AMP folder for instructions if you use
       Sonarr or Radarr.

FIRST RUN & USAGE
-----------------
  1. Initial Checks:
       When you first run `./jellymac.sh`, it performs
       health checks for dependencies and validates key
       paths from `lib/jellymac_config.sh`. Pay attention
       to any error or warning messages, as they will
       guide you to fix common setup issues.

  2. Start It Up:
       In your Terminal, navigate to the JellyMac_AMP folder:
                First, run:  cd ~/JellyMac_AMP
       Then run the script:  ./jellymac.sh

  3. Use It:
       - Dropor download media files/folders into your `DROP_FOLDER`.
       - Copy YouTube URLs to your clipboard.
       - Copy magnet links to your clipboard.
       - Watch the Terminal window for progress logs.
       - Check macOS notifications (if enabled).
       - Listen for the sound notifications (if enabled).
)

  4. When Done:
       Press Ctrl+C in the Terminal window to stop JellyMac AMP.

NETWORK SETUP (If media server is remote)
-----------------------------------------
If your media library folders (e.g., Movies, Shows) are on a
NAS or another computer, ensure they are mounted on your Mac:

  1. Mount Your Media Shares:
       - In Finder, press Cmd+K (Go > Connect to Server...).
       - Enter the server address, e.g.,
         `smb://server-ip/MediaShareName` or
         `nfs://server-ip/path/to/export`.
       - Ensure the mount point matches what you've set for
         `DEST_DIR_MOVIES`, etc., in `lib/jellymac_config.sh`
         (e.g., `/Volumes/MediaShareName/Movies`).

  2. Test Your Setup:
       - Can you access your media server (Jellyfin, Plex)
         from your Mac's browser?
       - Can you manually copy a file from your Mac to the
         mounted network shares in Finder?
       - Is your network connection stable?

TROUBLESHOOTING
---------------
  1. Common Issues:
       - Permission Problems:
           JellyMac AMP needs to read from your `DROP_FOLDER`
           and write to your destination directories.
           * Check ownership/permissions: `ls -la [directory]`
           * Fix (example): `chmod u+rwx [directory]`
             (Gives your user read, write, execute.
              Adjust as needed for your setup.)

       - Network Share Issues:
           * Ensure shares are mounted before starting.
           * Verify paths in `lib/jellymac_config.sh` are
             correct for the mounted shares.
           * Check server/NAS permissions for your Mac user.

       - "Command not found" for `yt-dlp`, `flock`, etc.:
           * Ensure Homebrew is installed and its bin directory
             (usually `/opt/homebrew/bin`) is in your PATH.
           * Let JellyMac AMP's first-run interactive setup
             install them, or install them manually.

  2. View the Logs:
       Logs are crucial for diagnosing issues.
       Location: `~/JellyMac_AMP/logs/`
       Current log: `jellymac_automator_log_YYYY-MM-DD.log`

  3. Starting Over / Re-checking Config:
       - Stop JellyMac AMP (Ctrl+C in Terminal).
       - Carefully review paths in `lib/jellymac_config.sh`.
       - Verify network shares are mounted and writable.
       - Re-run: `./jellymac.sh`
         (It will re-validate dependencies and paths).

ROADMAP AND FUTURE PLANS
------------------------
JellyMac AMP is under active development. Planned features:
  - Music file support.
  - Movie/TV Show collection/pack handling.
  - YouTube playlist support.
  - Enhanced metadata extraction.
  - Improved file recognition and filtering.
  - Youtube -> .mp3 options

Current development is focused on polishing existing
functionality. Your feedback is valuable, if you find bugs
or have any suggestions, please submit them on our GitHub page.

Thank you for giving JellyMac AMP a chance!

Happy automating!
