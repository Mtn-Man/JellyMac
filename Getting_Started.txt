┌─────────────────────────────────────────────────────────────┐
│                     J E L L Y M A C                         │
│          Automated Media Assistant for macOS                │
└─────────────────────────────────────────────────────────────┘

Welcome to JellyMac! 👋

This guide will help you set up and use JellyMac (Automated
Media Pipeline), a tool designed to make managing your media
library easier on macOS. Whether you're new to media automation
or a seasoned bash developer, we think this project has
something to offer for anyone with a media server and a Mac.

JellyMac is a lightweight, macOS-centric automation suite 
for media management, particularly for users of Jellyfin media server.
It leverages Bash scripting and common command-line tools to
monitor clipboard events (YouTube links, magnet links) and a
designated "drop folder" for new media. It then processes
these items — downloading, renaming, organizing, transferring (if needed)
— and optionally integrates with Jellyfin for automatic library updates.
This enables full end-to-end automation for media additions to your library
with just 2 clicks once JellyMac is running.

COMPATIBILITY
----------------
JellyMac runs on your Mac to automate your media pipeline.
While it offers direct library scan integration for Jellyfin
servers, its core download and organization features are
designed to work seamlessly with any media server (including
Plex, Emby, etc.) that monitors standard Movie and TV Show
folder structures.

The media server itself can be hosted on Linux, Windows, macOS, or a NAS,
as long as your Mac can write to the media library folders
(e.g., via network shares like SMB or NFS).

FUNCTIONALITY
----------------
JellyMac simplifies managing your media library by:

  1. Watching your clipboard for:
     - YouTube links (automatically downloads videos)
     - Magnet links (sends them to Transmission)

  2. Monitoring a "drop folder" where you can place:
     - Movies (loose files or in folders)
     - TV Show Episodes for organization

  Once JellyMac detects new media, it automatically:
     - Cleans filenames for better server matching
       (especially for Jellyfin and Plex).
     - Moves files to your configured library folders for Shows and Movies.
     -Sorts the files into the proper structure for Movies and for Shows
     - Can automatically trigger an update to the server so it shows the new content right away

Here's a summary of its capabilities:

  1. Process Media Files

     - Drop media into the watched `DROP_FOLDER`.
     - Identifies movies and TV shows.
     - Files are cleaned and organized.
     - Associated files (e.g., subtitles) are kept together.

  2. Handle YouTube Videos

     - Copy a YouTube URL to your clipboard.
     - Videos download at your preferred quality.
     - Placed in your designated YouTube folder (which can
       be a local folder or a network share pointing to
       your server's library).

  3. Process Torrents
     - Copy a magnet link to your clipboard.
     - Link is automatically added to Transmission.
     - When complete, Transmission can be configured to automatically move
       the file to your JellyMac `DROP_FOLDER`. JellyMac then
       processes and sorts it into your library
       destination folder


BEFORE YOU START
----------------

SECURITY NOTE:

     - Always review scripts before running them, or use an AI tool like ChatGPT to help check them.
       They are in plain text and are commented to help explain what they do.

     - This project uses third-party tools and their required dependencies:
       flock, yt-dlp, transmission-cli, ffmpeg

     - Do NOT run this script as root (sudo is not  needed or recommended).
      
     - Protect your API keys; never share them under any circumstances.

     - This is BETA software that manages files.
       ALWAYS KEEP BACKUPS OF IMPORTANT FILES AND MEDIA!

     - This software has no external networking capabilities other than what you set up for it
       JellyMac will not now or ever "phone-home" or collect your data in any way.
       It will remain free, transparent, and open to all

Setup Instructions
------------------

You'll need:

  1. A Mac running macOS
     - Tested and working well on macOS Sequoia, Sonoma, and Ventura.
     - Should work on older versions, but dependencies will take longer to install and may
       stress your system as they are compliled for your version.
     - Bash 3.2 (pre-installed on modern Macs).

  2. Homebrew Package Manager
     - If you don't have it, install from https://brew.sh


  3. (Optional) A Media Server (Jellyfin, Plex, Emby, etc.)
     - Can be running locally or on another computer/NAS.
     - If using Jellyfin and want auto-scans:
       - You'll need its address (e.g., http://server-ip:8096).
       - You'll need a Jellyfin API key (see Configuration below).

INSTALLATION
------------
  
  1. Get Homebrew and JellyMac:

       Open Terminal and run each command one at a time (follow the prompts to install Homebrew first):

         /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        
         brew install git

         git clone https://github.com/Mtn-Man/JellyMac.git JellyMac

         cd JellyMac && chmod +x jellymac.sh bin/*.sh


  2. Configure your paths:

  IMPORTANT: Edit jellymac_config.sh to set your actual media library paths:

         - DROP_FOLDER: Where you'll drop new media files
         - DEST_DIR_MOVIES: Your movies folder location
         - DEST_DIR_SHOWS: Your TV shows folder location  
         - DEST_DIR_YOUTUBE: Where YouTube downloads go
         
       Default paths (edit for your own media library locations or use the default options):

         DROP_FOLDER="$HOME/Downloads/JellyDrop"
         DEST_DIR_MOVIES="$HOME/Movies/Movies"
         DEST_DIR_SHOWS="$HOME/Movies/Shows"
         DEST_DIR_YOUTUBE="$HOME/Movies/YouTube"
         
       To edit the configuration file:

         1. Open Finder
         2. Press Cmd+Shift+H to open your Home folder
         3. Navigate to JellyMac → lib folder
         4. Double-click jellymac_config.sh to open in TextEdit
         5. Find and edit the file paths to match your setup
         6. Save the file (Cmd+S) and close TextEdit

  3. Configure Jellyfin integration for auto library syncing (optional):

         JELLYFIN_SERVER="http://your-server-ip:8096"
         JELLYFIN_API_KEY="your-jellyfin-api-key"
       
       To get your Jellyfin API key:

         1. Open Jellyfin web interface
         2. Click user icon → Dashboard → API Keys
         3. Click "+" to create new key
         4. Name it "JellyMac" and copy the generated key
         5. Paste it into jellymac_config.sh as the JELLYFIN_API_KEY value

       After configuring your JELLYFIN_SERVER and JELLYFIN_API_KEY,
       if you want JellyMac to automatically trigger library scans in Jellyfin,
       you must also enable the corresponding scan features in your
       lib/jellymac_config.sh file by setting them to "true":

         ENABLE_JELLYFIN_SCAN_MOVIES="true"
         ENABLE_JELLYFIN_SCAN_SHOWS="true"
         ENABLE_JELLYFIN_SCAN_YOUTUBE="true"

  4. Run JellyMac:
         
         cd ~/JellyMac

         ./jellymac.sh

The interactive setup wizard will:

• Check for missing dependencies and offer to install them
• Validate your configured paths and create missing directories
• Set up Transmission service for magnet links
• Offer automatic Transmission download location configuration


FIRST RUN EXPERIENCE
-------------------

After you run `./jellymac.sh`, the setup assistant will guide you through:

• Dependency checks and automated installation offers
• Path validation and directory creation
• Transmission service setup for magnet link automation
• Automatic Transmission download location configuration (recommended)

Complete Magnet Link Automation Setup:

JellyMac will automatically offer to configure Transmission during setup.
When prompted with "Auto-configure Transmission download location? (Y/n):",
press Enter (or Y) to let JellyMac configure everything automatically.

This automatic setup will:
• Set Transmission's download location to your DROP_FOLDER
• Enable the complete automation chain without manual configuration

If automatic configuration fails or you prefer manual setup:
       a) Open http://localhost:9091 in your browser
       b) Click the hamburger menu (≡) at the top right  
       c) Select 'Edit Preferences' from the menu
       d) In the Downloads section, set Download location to your DROP_FOLDER:
          Example: /Users/YourName/Downloads/JellyDrop
       
       This enables the full automation chain:
       Copy magnet link → Transmission downloads → JellyMac processes → 
       Media organized → Jellyfin updated
       
       Manual Transmission Management (Advanced):
       - Start service: brew services start transmission
       - Stop service: brew services stop transmission  
       - Restart service: brew services restart transmission


DAILY USAGE
-----------

Once setup is complete:

  Starting JellyMac:
       cd ~/JellyMac
       ./jellymac.sh

  Using JellyMac:
       - Drop media files into your configured DROP_FOLDER
       - Copy YouTube URLs to your clipboard
       - Copy magnet links to your clipboard
       - Watch the Terminal window for progress logs
       - Check macOS notifications (if enabled)

  Stopping JellyMac:
       Press Ctrl+C in the Terminal window

PLAYBACK SUGGESTIONS
--------------------

For local video playback, the default QuickTime Player has limited support
for modern video codecs (e.g. HEVC/H.265), which will cause playback issues
with JellyMac's YouTube downloads.

Instead, we recommend using Jellyfin Server to host your media locally,
then play back in any web browser, and on any computer on your network.

Find out more: https://jellyfin.org

Alternatively, there are many reliable, free video players for macOS,
including:

  - Infuse: https://firecore.com/infuse
  - IINA:   https://www.iina.tv/
  - VLC:    https://www.videolan.org/vlc/

In a pinch, Google Chrome can also play many media formats, if you already have that installed.

ADVANCED: Sonarr/Radarr Integration
-----------------------------------

See `Arr_Suite_Handoff_Guide.txt` in the main JellyMac folder for 
instructions if you use Sonarr or Radarr.


NETWORK SETUP (If your media server is on another computer)
-----------------------------------------------------------

If your media library folders (e.g., Movies, Shows) are on a
NAS or another computer on the network, create a network share, then ensure it is mounted on your Mac:

  1. Mount Your Media Shares:
       - In Finder, press Cmd+K (Go > Connect to Server...).
       - Enter the server address, e.g.,
         `smb://server-ip/MediaShareName` or
         `nfs://server-ip/path/to/export`
       - Ensure the mount point matches what you've set for
         `DEST_DIR_MOVIES`, etc., in `lib/jellymac_config.sh`
         (e.g., `/Volumes/MediaShareName/Movies`).

  2. Test Your Setup:
       - Can you access your media server (Jellyfin, Plex)
         from your Mac's Finder?
       - Can you manually copy a file from your Mac to the
         mounted network shares in Finder?
       - Is your network connection stable?


TROUBLESHOOTING
---------------
  1. Common Issues:

       - Permission Problems:
           JellyMac needs to read from your `DROP_FOLDER`
           and write to your destination directories.
           * Check ownership/permissions: `ls -la [directory]`
           * Fix (example): 
           
           chmod u+rwx [directory]             (Gives your user read, write, execute)

       - Network Share Issues:
           * Ensure shares are mounted before starting.
           * Verify paths in `lib/jellymac_config.sh` are
             correct for the mounted shares.
           * Check server/NAS permissions for your Mac user.

       - "Command not found" for `yt-dlp`, `flock`, etc.:
           * Ensure Homebrew is installed and its bin directory
             (usually `/opt/homebrew/bin`) is in your PATH.
           * Let JellyMac's first-run interactive setup
             install them, or install them manually.

  2. View the Logs:
       Logs are crucial for diagnosing issues.
       Location: `~/JellyMac/logs/`
       Current log: `jellymac_automator_log_YYYY-MM-DD.log`

  3. Starting Over / Re-checking Config:
       - Stop JellyMac (Ctrl+C in Terminal).
       - Carefully review paths in `lib/jellymac_config.sh`.
       - Verify network shares are mounted and writable.
       - Re-run: `./jellymac.sh`
         (It will re-validate dependencies and paths).


ROADMAP AND FUTURE PLANS
------------------------

JellyMac is in active development.
Planned features include:
  - Movie/TV Show season/collection/pack handling.
  - YouTube playlist support.
  - Enhanced metadata extraction.
  - Improved file recognition and filtering.
  - GUI version

Current development is focused on polishing existing
functionality.

Your feedback is incredibly valuable!
If you find bugs, or have suggestions for new features,
please submit them on our project's GitHub page.

You can also contact me directly:
  elisher@duck.com

Thank you for giving JellyMac a chance!

Happy automating!
