┌─────────────────────────────────────────────────────────────┐
│                     J E L L Y M A C                         │
│          Automated Media Assistant for macOS                │
└─────────────────────────────────────────────────────────────┘

Welcome to JellyMac! 👋

This guide will help you set up and use JellyMac (Automated
Media Pipeline), a tool designed to make managing your media
library easier on macOS. Whether you're new to media automation
or a seasoned bash developer, we think this project has
something to offer for anyone with a media server and a Mac.

JellyMac is a lightweight, macOS-centric automation suite 
for media management, particularly for users of Jellyfin media server.
It leverages Bash scripting and common command-line tools to
monitor clipboard events (YouTube links, magnet links) and a
designated "drop folder" for new media. It then processes
these items — downloading, renaming, organizing, transferring (if needed)
— and optionally integrates with Jellyfin for automatic library updates.
This enables full end-to-end automation for media additions to your library
with just 2 clicks once JellyMac is running.

TABLE OF CONTENTS
-----------------
🏠 COMPATIBILITY ......................... Line 37
🔧 FUNCTIONALITY ......................... Line 50  
🔒 BEFORE YOU START ...................... Line 95
⚙️ INSTALLATION .......................... Line 138
🚀 FIRST RUN EXPERIENCE .................. Line 216
📱 DAILY USAGE ........................... Line 253
💡 PLAYBACK SUGGESTIONS .................. Line 274
🌐 NETWORK SETUP ......................... Line 319
🛠️ TROUBLESHOOTING ....................... Line 290
📋 ROADMAP AND FUTURE PLANS .............. Line 362

COMPATIBILITY
----------------
JellyMac runs on your Mac to automate your media pipeline.
While it offers direct library scan integration for Jellyfin
servers, its core download and organization features are
designed to work seamlessly with any media server (including
Plex, Emby, etc.) that monitors standard Movie and TV Show
folder structures.

The media server itself can be hosted on Linux, Windows, macOS, or a NAS,
as long as your Mac can write to the media library folders
(e.g., via network shares like SMB or NFS).

FUNCTIONALITY
----------------
JellyMac simplifies managing your media library by:

  1. Watching your clipboard for:
     - YouTube links (automatically downloads videos)
     - Magnet links (sends them to Transmission)

  2. Monitoring a "drop folder" where you can place:
     - Movies (loose files or in folders)
     - TV Show Episodes for organization

  Once JellyMac detects new media, it automatically:
     - Cleans filenames for better server matching
       (especially for Jellyfin and Plex).
     - Moves files to your configured library folders for Shows and Movies.
     -Sorts the files into the proper structure for Movies and for Shows
     - Can automatically trigger an update to the server so it shows the new content right away

Here's a summary of its capabilities:

  1. Process Media Files

     - Drop media into the watched `DROP_FOLDER`.
     - Identifies movies and TV shows.
     - Files are cleaned and organized.
     - Associated files (e.g., subtitles) are kept together.

  2. Handle YouTube Videos

     - Copy a YouTube URL to your clipboard.
     - Videos download at your preferred quality.
     - Placed in your designated YouTube folder (which can
       be a local folder or a network share pointing to
       your server's library).

  3. Process Torrents
     - Copy a magnet link to your clipboard.
     - Link is automatically added to Transmission.
     - When complete, Transmission can be configured to automatically move
       the file to your JellyMac `DROP_FOLDER`. JellyMac then
       processes and sorts it into your library
       destination folder


BEFORE YOU START
----------------

SECURITY NOTE:

     - Always review scripts before running them, or use an AI tool like ChatGPT to help check them.
       They are in plain text and are commented to help explain what they do.

     - This project uses third-party tools and their required dependencies:
       flock, yt-dlp, transmission-cli, ffmpeg

     - Do NOT run this script as root (sudo is not  needed or recommended).
      
     - Protect your API keys; never share them under any circumstances.

     - This is BETA software that manages files.
       ALWAYS KEEP BACKUPS OF IMPORTANT FILES AND MEDIA!

     - This software has no external networking capabilities other than what you set up for it
       JellyMac will not now or ever "phone-home" or collect your data in any way.
       It will remain free, transparent, and open to all

Setup Instructions
------------------

You'll need:

  1. A Mac running macOS
     - Tested and working well on macOS Sequoia, Sonoma, and Ventura.
     - Should work on older versions, but dependencies will take longer to install and may
       stress your system as they are compliled for your version.
     - Bash 3.2 (pre-installed on modern Macs).

  2. Homebrew Package Manager
     - If you don't have it, install from https://brew.sh


  3. (Optional) A Media Server (Jellyfin, Plex, Emby, etc.)
     - Can be running locally or on another computer/NAS.
     - If using Jellyfin and want auto-scans:
       - You'll need its address (e.g., http://server-ip:8096).
       - You'll need a Jellyfin API key (see Configuration below).

INSTALLATION
------------
  
  1. Get Homebrew and JellyMac:

       Open Terminal and run each command one at a time (follow the prompts to install Homebrew first):         /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        
         Important: After Homebrew installs, it will show you commands to add it to your PATH. 
         Copy and run those exact commands before continuing.
        
         brew install git

         git clone https://github.com/Mtn-Man/JellyMac.git

         cd JellyMac && chmod +x jellymac.sh bin/*.sh

  2. First Run Setup:

       cd ~/JellyMac && ./jellymac.sh

       JellyMac's interactive setup wizard will:
       • Create your configuration file automatically
       • Offer to open it in TextEdit for immediate customization
       • Check for missing dependencies and offer to install them
       • Set up Transmission service for magnet link automation
       • Validate your configured paths and create missing directories
       • Configure complete automation chains

       Configuration Options:
       
       Option 1: Edit Configuration Now
       - Choose this for media servers, NAS, or custom locations
       - JellyMac opens the config file in TextEdit immediately
       - Edit your paths, save, and restart JellyMac
       
       Option 2: Use Default Local Setup  
       - Choose this for simple local media organization
       - Uses: ~/Movies/Movies, ~/Movies/Shows, ~/Downloads/JellyDrop
       - Can be customized later if needed

  3. Manual Configuration (if needed later):

         JELLYFIN_SERVER="http://your-server-ip:8096" (usually looks like 192.168.0.100:8096 or similar)
         JELLYFIN_API_KEY="your-jellyfin-api-key"
       
       To get your Jellyfin API key:

         1. Open Jellyfin web interface
         2. Click user icon → Dashboard → API Keys
         3. Click "+" to create new key
         4. Name it "JellyMac" and copy the generated key
         5. Paste it into jellymac_config.sh as the JELLYFIN_API_KEY value

       After configuring your JELLYFIN_SERVER and JELLYFIN_API_KEY,
       if you want JellyMac to automatically trigger library scans in Jellyfin,
       you must also enable the corresponding scan features in your
       lib/jellymac_config.sh file by setting them to "true":

         ENABLE_JELLYFIN_SCAN_MOVIES="true"
         ENABLE_JELLYFIN_SCAN_SHOWS="true"
         ENABLE_JELLYFIN_SCAN_YOUTUBE="true"

  4. Run JellyMac:
         
         cd ~/JellyMac && ./jellymac.sh

The interactive setup wizard will:

• Offer to copy the example configuration file if you have not already done so
• Offer to open the new config file so you can make changes right away
• Provide smart dependency management - choose permanent auto-install or one-time setup
• Configure complete Transmission integration - background service + automatic download 
  folder configuration for seamless magnet → library workflow
• Offer set up of enhanced default media player  - IINA setup for updated file playback and codec support
• Validate network paths - ensures media server connections work properly
• Create directories automatically - sets up all required folders with proper permissions


FIRST RUN EXPERIENCE
-------------------

After you run `./jellymac.sh`, the setup assistant will guide you through:

• Dependency checks and automated installation offers
• Path validation and directory creation
• Transmission service setup for magnet link automation
• Automatic Transmission download location configuration (recommended)

Complete Magnet Link Automation Setup:

JellyMac will automatically offer to configure Transmission during setup.
When prompted with "Auto-configure Transmission download location? (Y/n):",
press Enter (or Y) to let JellyMac configure everything automatically.

This automatic setup will:
• Set Transmission's download location to your DROP_FOLDER
• Enable the complete automation chain without manual configuration

If automatic configuration fails or you prefer manual setup:
       a) Open http://localhost:9091 in your browser
       b) Click the hamburger menu (≡) at the top right  
       c) Select 'Edit Preferences' from the menu
       d) In the Downloads section, set Download location to your DROP_FOLDER:
          Example: /Users/YourName/Downloads/JellyDrop
       
       This enables the full automation chain:
       Copy magnet link → Transmission downloads → JellyMac processes → 
       Media organized → Jellyfin updated
       
       Manual Transmission Management (Advanced):
       - Start service: brew services start transmission
       - Stop service: brew services stop transmission  
       - Restart service: brew services restart transmission


DAILY USAGE
-----------

Once setup is complete:

  Starting JellyMac:

       cd ~/JellyMac && ./jellymac.sh
      
  Using JellyMac:

       - Drop media files into your configured DROP_FOLDER
       - Copy YouTube URLs to your clipboard
       - Copy magnet links to your clipboard
       - Watch the Terminal window for progress logs
       - Check macOS notifications (if enabled)

  Stopping JellyMac:

       Press Ctrl+C in the Terminal window

PLAYBACK SUGGESTIONS
--------------------

For local video playback, the default QuickTime Player lacks support
for modern video codecs (e.g. HEVC/VP9/AV1), which will likely cause playback issues
with many of JellyMac's YouTube downloads.

Enhanced Media Player Setup:
During JellyMac's first run, you'll be offered the option to install and configure
IINA as your default media player. IINA provides excellent codec support and handles
modern video formats that QuickTime Player cannot play.

If you accept IINA installation:
- JellyMac will install IINA via Homebrew
- IINA will be set as the default player for media files
- Enhanced codec support for all downloaded content

If you decline IINA installation:
You have several excellent alternatives for playing modern video formats:

Primary Recommendation:
- Jellyfin Server: Host your media locally or remotely, then play back 
  in any web browser on any computer on your network.
  Find out more: https://jellyfin.org

Alternatively, there are many reliable, free video players for macOS,
including:

  - Infuse: https://firecore.com/infuse        (can sync with a Jellyfin or Plex library)
  - VLC:    https://www.videolan.org/vlc/      or      brew install --cask vlc
  - IINA:   https://www.iina.tv/               or      brew install --cask iina
  - and others...

In a pinch, Google Chrome can also play many media formats, if you already have that installed.

Note: If you initially declined IINA during setup, you can always install it later
using: brew install --cask iina

ADVANCED: Sonarr/Radarr Integration
-----------------------------------

See `Arr_Suite_Handoff_Guide.txt` in the main JellyMac folder for 
instructions if you use Sonarr or Radarr.


NETWORK SETUP (If your media server is on another computer)
-----------------------------------------------------------

If your media library folders (e.g., Movies, Shows) are on a
NAS or another computer on the network, create a network share, then ensure it is mounted on your Mac:

  1. Mount Your Media Shares:
       - In Finder, press Cmd+K (Go > Connect to Server...).
       - Enter the server address, e.g.,
         `smb://server-ip/MediaShareName` or
         `nfs://server-ip/path/to/export`
       - Ensure the mount point matches what you've set for
         `DEST_DIR_MOVIES`, etc., in `lib/jellymac_config.sh`
         (e.g., `/Volumes/MediaShareName/Movies`).

  2. Test Your Setup:
       - Can you access your media server (Jellyfin, Plex)
         from your Mac's Finder?
       - Can you manually copy a file from your Mac to the
         mounted network shares in Finder?
       - Is your network connection stable?


TROUBLESHOOTING
---------------
  1. Common Issues:

       - Permission Problems:
           JellyMac needs to read from your `DROP_FOLDER`
           and write to your destination directories.
           * Check ownership/permissions: `ls -la [directory]`
           * Fix (example): 
           
           chmod u+rwx [directory]             (Gives your user account read, write, execute)

       - Network Share Issues:
           * Ensure shares are mounted before starting.
           * Verify paths in `lib/jellymac_config.sh` are
             correct for the mounted shares.
           * Check server/NAS permissions for your Mac user.

       - "Command not found" for `yt-dlp`, `flock`, etc.:
           * Ensure Homebrew is installed and its bin directory
             (usually `/opt/homebrew/bin`) is in your PATH.
           * Let JellyMac's first-run interactive setup
             install them, or install them manually.
           * Ensure installed homebrew programs are updated, run: brew upgrade && brew update

  2. View the Logs:
       Logs are crucial for diagnosing issues.
       Location: `~/JellyMac/logs/`
       Current log: `jellymac_automator_log_YYYY-MM-DD.log`

  3. Starting Over / Re-checking Config:
       - Stop JellyMac (Ctrl+C in Terminal).
       - Carefully review paths in `lib/jellymac_config.sh`.
       - Verify network shares are mounted and writable.
       - Re-run: `./jellymac.sh`
         (It will re-validate dependencies and paths).

  


ROADMAP AND FUTURE PLANS
------------------------

JellyMac is in ongoing active development.
Planned future features include:

  - YouTube playlist support.
  - Movie/TV Show season/collection/pack handling.
  - Improved file recognition and filtering.
  - Enhanced and user friendly GUI (graphical) version in Swift (maybe menu bar app?)

Your feedback is incredibly valuable!
If you find bugs, or have suggestions for new features,
please submit them on our project's GitHub page.

You can also contact me directly:
  elisher@duck.com

Thank you for giving JellyMac a chance!

Happy automating!
